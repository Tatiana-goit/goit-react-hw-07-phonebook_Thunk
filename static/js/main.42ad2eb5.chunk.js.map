{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.jsx","redux/phone-operations.js","redux/phone-selector.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","redux/slices/filter.js","components/Filter/Filter.jsx","components/App/App.js","redux/slices/contact.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","result","data","addContact","contact","post","deleteContact","contactId","delete","id","getContacts","state","contacts","contactItems","getFilter","filter","getFiltredContacts","createSelector","name","toLowerCase","includes","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","resetForm","form","onSubmit","preventDefault","some","element","alert","label","input","type","pattern","title","required","onChange","button","ContactList","useEffect","list","map","item","info","onClick","filterSlice","createSlice","initialState","reducers","filtered","action","payload","actions","Filter","section","text","App","contactSlice","loading","error","extraReducers","fulfilled","pending","rejected","persistConfig","key","version","storage","blacklist","contactReducer","combineReducers","persisteContactReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loader","document","getElementById"],"mappings":"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","file":"static/js/main.42ad2eb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__13OX_\",\"item\":\"ContactList_item__3KLWQ\",\"info\":\"ContactList_info__2DbSH\",\"name\":\"ContactList_name__2uYCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Filter_section__PDukU\",\"text\":\"Filter_text__RNJYo\",\"input\":\"Filter_input__34T4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2MqUL\"};","import PropTypes from \"prop-types\";\nimport s from './Container.module.css';\n\nexport default function Container ({ children })  {\n  return (\n  <div className={s.container}>\n    {children}\n  </div>\n  )\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://61a0c0166c3b400017e69a40.mockapi.io/api/v1';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const result = await axios.get('/contacts');\r\n      // console.log(result.data);\r\n      return result.data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const result = await axios.post('/contacts', contact);\r\n      //   console.log(result.data);\r\n      return result.data;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const result = await axios.delete(`/contacts/${contactId}`);\r\n      // console.log(result.data.id);\r\n      return result.data.id;\r\n    } catch (error) {\r\n      rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.contactItems;\r\n\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFiltredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contactItems, filter) =>\r\n    contactItems.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/phone-operations';\nimport { getContacts } from '../../redux/phone-selector';\nimport s from './ContactForm.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const comparableElement = contacts.some(\n      element => element.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (comparableElement) {\n      resetForm();\n      return alert(`${name} is already in the directory`);\n    }\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          <span className={s.name}>Name</span>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleChange}\n          ></input>\n        </label>\n\n        <label className={s.label}>\n          <span className={s.name}>Number</span>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={handleChange}\n          ></input>\n        </label>\n\n        <button className={s.button} type=\"submit\">\n          Add\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFiltredContacts } from '../../redux/phone-selector';\nimport { fetchContacts, deleteContact } from '../../redux/phone-operations';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const contacts = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <div className={s.info}>\n            <p className={s.name}> {name}</p>\n            <p className={s.number}> {number}</p>\n          </div>\n\n          <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst filterSlice = createSlice({\r\n  name: 'filter',\r\n  initialState: '',\r\n  reducers: {\r\n    filtered: (_, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport const { filtered } = filterSlice.actions;\r\nexport default filterSlice.reducer;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phone-selector';\nimport { filtered } from '../../redux/slices/filter';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onchangeFilter = e => dispatch(filtered(e.currentTarget.value));\n\n  return (\n    <div className={s.section}>\n      <span className={s.text}> Фильтр по имени</span>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={filter}\n        onChange={onchangeFilter}\n      ></input>\n    </div>\n  );\n}\n","import './App.css';\nimport { RiContactsBook2Fill, RiContactsFill } from 'react-icons/ri';\nimport Container from '../Container/Container';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <h1>\n          <RiContactsBook2Fill />\n          Phonebook\n        </h1>\n        <ContactForm />\n        <h2>\n          <RiContactsFill />\n          Contacts\n        </h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { fetchContacts, addContact, deleteContact } from '../phone-operations';\r\n\r\nconst contactSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState: { contactItems: [], loading: false, error: null },\r\n  extraReducers: {\r\n    [fetchContacts.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      contactItems: action.payload,\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    [fetchContacts.pending]: state => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    [fetchContacts.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: action.payload,\r\n    }),\r\n\r\n    [addContact.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      contactItems: [...state.contactItems, action.payload],\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    [addContact.pending]: state => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    [addContact.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: action.payload,\r\n    }),\r\n\r\n    [deleteContact.fulfilled]: (state, action) => ({\r\n      ...state,\r\n      contactItems: state.contactItems.filter(\r\n        ({ id }) => id !== action.payload,\r\n      ),\r\n      loading: false,\r\n      error: null,\r\n    }),\r\n    [deleteContact.pending]: state => ({\r\n      ...state,\r\n      loading: true,\r\n      error: null,\r\n    }),\r\n    [deleteContact.rejected]: (state, action) => ({\r\n      ...state,\r\n      loading: false,\r\n      error: action.payload,\r\n    }),\r\n  },\r\n});\r\n\r\nexport default contactSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport contacts from './slices/contact';\r\nimport filter from './slices/filter';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  version: 1,\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst contactReducer = combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n\r\nconst persisteContactReducer = persistReducer(persistConfig, contactReducer);\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: persisteContactReducer,\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    })\r\n});\r\n\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from '../src/redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loader={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1XvUA\",\"label\":\"ContactForm_label__X-ZHG\",\"name\":\"ContactForm_name__1jF4S\",\"input\":\"ContactForm_input__1huEq\"};"],"sourceRoot":""}